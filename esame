# esame telerilevamento 2021.R

# area di studio nord lago d'aral o nord mar caspio (delta del fiume immisario)

setwd("C:/lab/lago_aral/")
library(raster)
library(rasterVis)
library(RStoolbox)
library(ggplot2)
library(gridExtra)


#importo immagini in maniera sincrona

# 2013

rlist<-list.files(pattern="LC08_L1TP_161028_20130506_20170504_01_T1_B")
import<-lapply(rlist,raster)
lar2013<-stack(import) #unisce in un singolo file quelli che erano in lista
p1<-ggRGB(lar2013, 4,3,2, stretch="lin")+labs(title="2013")
p2<-ggRGB(lar2013, 5,4,3, stretch="hist")+labs(title="2013 IR") #falsi colori IR
grid.arrange(p1,p2,nrow=1,top="Confronto tra RGB e IR")

# 2015

rlist2<-list.files(pattern="LC08_L1TP_161028_20150528_20170408_01_T1_B")
import<-lapply(rlist2,raster)
lar2015<-stack(import) #unisce in un singolo file quelli che erano in lista
p3<-ggRGB(lar2015, 4,3,2, stretch="lin")+labs(title="2015")
p4<-ggRGB(lar2015, 5,4,3, stretch="hist")+labs(title="2015 IR") #falsi colori IR
grid.arrange(p3,p4,nrow=1,top="Confronto tra RGB e IR")

# 2018

rlist3<-list.files(pattern="LC08_L1TP_161028_20180520_20180605_01_T1_B")
import<-lapply(rlist3,raster)
lar2018<-stack(import) #unisce in un singolo file quelli che erano in lista
p5<-ggRGB(lar2018, 4,3,2, stretch="lin")+labs(title="2018")
p6<-ggRGB(lar2018, 5,4,3, stretch="hist")+labs(title="2018 IR") #falsi colori IR
grid.arrange(p5,p6,nrow=1,top="Confronto tra RGB e IR")

# 2021

rlist4<-list.files(pattern="LC08_L1TP_161028_20210512_20210524_01_T1_B")
import<-lapply(rlist4,raster)
lar2021<-stack(import) #unisce in un singolo file quelli che erano in lista
p7<-ggRGB(lar2021, 4,3,2, stretch="lin")+labs(title="2021")
p8<-ggRGB(lar2021, 5,4,3, stretch="hist")+labs(title="2021 IR") #falsi colori IR
grid.arrange(p7,p8,nrow=1,top="Confronto tra RGB e IR")

#plotto le 4 immagini per presentarle

grid.arrange(p1,p3,p5,p7,nrow=2,ncol=2, top="Time Series del Lago d'Aral")

#plotto le 4 immagini per presentarle in IR
grid.arrange(p2,p4,p6,p8,nrow=2,ncol=2, top="Time Series del Lago d'Aral")

#mi focalizzo solo su 2013 e 2021
grid.arrange(p1,p7,nrow=1, top="Confronto  2013 / 2021")

# MNDWI 2013

green2013<-lar2013$LC08_L1TP_161028_20130506_20170504_01_T1_B3
swir2013<-lar2013$LC08_L1TP_161028_20130506_20170504_01_T1_B6
mndwi2013<-(green2013-swir2013)/(green2013+swir2013)
cl<-colorRampPalette(c("darkblue","yellow","red","black"))(100)
plot(mndwi2013, col=cl)

# valori da 
#mndwisd<-focal(mndwi, w=matrix(1/9,nrow=3,ncol=3),fun=sd)

# MNDWI 2021

green2021<-lar2021$LC08_L1TP_161028_20210512_20210524_01_T1_B3
swir2021<-lar2021$LC08_L1TP_161028_20210512_20210524_01_T1_B6
mndwi2021<-(green2021-swir2021)/(green2021+swir2021)
cl<-colorRampPalette(c("darkblue","yellow","red","black"))(150)
plot(mndwi2021, col=cl)

# MNDWI 2021 - MNDWI 2013

cl_diff<-colorRampPalette(c("darkblue","blue","khaki1","white","black"))(200)
mndwi_diff<- mndwi2013-mndwi2021
plot(mndwi_diff, col=cl_diff)

#per plottare con ggplot2 devo rendere il raster un dataframe
mndwidif2<-aggregate(mndwi_diff, fact=3)
mdf2 <- rasterToPoints(mndwidif2)
mdf2 <- data.frame(mdf2)
colnames(mdf2) <- c("X","Y","mndwidif2")
b.m2 <- seq(min(mdf2$mndwidif2),max(mdf2$mndwidif2),length.out=100)
ggplot(mdf2,aes(X,Y))+geom_raster(aes(x=X,y=Y,fill=mndwidif2),hjust=0.5,vjust=0.5,interpolate=F)
ggplot(hdf)+
  geom_raster(data=ddf,aes(X,Y,fill=DEM))+
  scale_fill_gradientn(name="Altitude",colours = rainbow(20))+
  guides(fill = guide_colorbar()) +
  geom_tile(aes(X,Y,alpha=Hill), fill = "grey20") +
  scale_alpha(range = c(0, 0.5)) +
  scale_x_continuous(name=expression(paste("Longitude (",degree,")")),
    limits=c(-4,2),expand=c(0,0)) +
  scale_y_continuous(name=expression(paste("Latitude (",degree,")")),
    limits=c(4,12),expand=c(0,0)) +
  coord_equal()


mdf <- rasterToPoints(mndwi_diff)
mdf <- data.frame(mdf)
colnames(mdf) <- c("X","Y","mndwidif")
b.m <- seq(min(mdf$mndwidif),max(mdf$mndwidif),length.out=100)
ggplot(mdf,aes(X,Y))+geom_raster(aes(x=X,y=Y,fill=mndwidif),hjust=0.5,vjust=0.5,interpolate=F)

## Calculate NDVI
ndvi <- spectralIndices(lsat, red = "B3_dn", nir = "B4_dn", indices = "NDVI")
ndvi
ggR(ndvi, geom_raster = TRUE) +
        scale_fill_gradientn(colours = c("black", "white")) 

# NDVI 2013

cs<-colorRampPalette(c("black","green","white","red"))(150)
nir2013<-lar2013$LC08_L1TP_161028_20130506_20170504_01_T1_B5
red2013<-lar2013$LC08_L1TP_161028_20130506_20170504_01_T1_B4
ndvi2013<-(nir2013-red2013)/(nir2013+red2013)
plot(ndvi2013, col=cs)

# NDVI 2021

nir2021<-lar2021$LC08_L1TP_161028_20210512_20210524_01_T1_B5
red2021<-lar2021$LC08_L1TP_161028_20210512_20210524_01_T1_B4
ndvi2021<-(nir2021-red2021)/(nir2021+red2021)
plot(ndvi2021, col=cs)

# NDVI 2021 - NDVI 2013

ndvi_diff<- ndvi2013-ndvi2021
plot(ndvi_diff, col=cl_diff)

# unsuperClass

greenn2013<-raster("LC08_L1TP_161028_20130506_20170504_01_T1_B3.TIF")
swirr2013<-raster("LC08_L1TP_161028_20130506_20170504_01_T1_B6.TIF")
mndwii2013<-(greenn2013-swirr2013)/(greenn2013+swirr2013)
plot(mndwii2013, col=cl)
clas2013<-unsuperClass(mndwii2013, nClasses=4)
set.seed(42)
class2013<-unsuperClass(mndwii2013, nClasses=4)
plot(clas$map, col=cl)

pairs(lar2021) #faccio la correlazione tra tutte le variabili e plottarle a coppie e vedere quelle che si correlano

# levelplot di mndwi

rlist5<-list.files(mndwi2013, mndwi2021)

# per associare l'immagine da 20 m a 10 m uso aggregate con fattore=2
# esempio 
# bbq<-aggregate(immagine_grande, fact=2)





olpar <- par(no.readonly = TRUE) # back-up par
par(mfrow=c(1,2))
colors <- rainbow(5)
plot(clas$map, col = colors, legend = FALSE, axes = FALSE, box = FALSE)
legend(1,1, legend = paste0("C",1:5), fill = colors,
       title = "Classes", horiz = TRUE,  bty = "n")
par(olpar)


larqa2013<-raster("LC08_L1TP_161028_20130506_20170504_01_T1_BQA.TIF")
classifyQA(larqa2013, type = c("background", "cloud", "cirrus", "snow",
  "water"), confLayers = T, sensor = "OLI",
  legacy = "collection1")
  

encodeQA(fill = "no", terrainOcclusion = "no", radSaturation = "na",
  cloudMask = "all", cloud = "all", cloudShadow = "all",
  snow = "all", cirrus = "all", droppedPixel = "no", water = "all",
  droppedFrame = "no", sensor = "OLI", legacy = "collection1")
  
  
ggRGB(mndwii2013, r = 3, g = 2, b = 1, scale, maxpixels = 5e+05,
  stretch = "none")
